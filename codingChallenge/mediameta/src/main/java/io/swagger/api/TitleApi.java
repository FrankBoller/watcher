/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.11).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Title;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-02-28T19:53:18.269Z")

@Api(value = "title", description = "the title API")
public interface TitleApi {

    @ApiOperation(value = "adds a title of a given type", nickname = "addTitleItem", notes = "Adds a title to the system", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "feature created"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "an existing feature already exists") })
    @RequestMapping(value = "/title",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addTitleItem(@ApiParam(value = "feature to add"  )  @Valid @RequestBody Title titleItem);


    @ApiOperation(value = "delete an existing title", nickname = "deleteTitleItem", notes = "", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "invalid input") })
    @RequestMapping(value = "/title",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteTitleItem(@ApiParam(value = "" ,required=true) @RequestHeader(value="type", required=true) String type,@ApiParam(value = "" ,required=true) @RequestHeader(value="name", required=true) String name);


    @ApiOperation(value = "searches for title(s)", nickname = "searchTitleItem", notes = "By passing in the appropriate options, you can search for available titles in the system ", response = Title.class, responseContainer = "List", tags={ "users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "search results matching criteria", response = Title.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/title",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Title>> searchTitleItem(@ApiParam(value = "select one of type: bonus, episode, season, tvseries, or feature") @Valid @RequestParam(value = "type", required = false) String type,@ApiParam(value = "pass an optional search string") @Valid @RequestParam(value = "searchString", required = false) String searchString);


    @ApiOperation(value = "update an existing title", nickname = "updateTitleItem", notes = "", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "invalid object"),
        @ApiResponse(code = 404, message = "object not found"),
        @ApiResponse(code = 405, message = "validation exception") })
    @RequestMapping(value = "/title",
        produces = { "application/json" }, 
        consumes = { "application/json", "application/x-www-form-urlencoded" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateTitleItem(@ApiParam(value = "the json string used for update", required=true) @RequestPart(value="jsonString", required=true)  String jsonString,@ApiParam(value = "one of: bonus, feature, tvseries, season, or episode" ) @RequestHeader(value="type", required=false) String type,@ApiParam(value = "" ) @RequestHeader(value="parentTitle", required=false) String parentTitle);

}
